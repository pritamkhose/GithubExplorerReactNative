# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://github.com/realabbas/Github-Actions-React-Native
# https://blog.usejournal.com/automate-react-native-builds-with-github-actions-af54212d26dc
# https://blog.logrocket.com/react-native-ci-cd-using-github-actions/
# https://sonarcloud.io/project/configuration?analysisMode=GitHubActions&id=pritamkhose_GithubExplorerReactNative

name: react-native-android-build-apk

on:
  push:
    branches: [ master ]
  pull_request:
    # branches: [ master ]
    types: [opened, synchronize, reopened]

jobs:
  install-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install npm dependencies
        run: |
          npm install
      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!
      # Setup JDK
      - name: set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: gradle

      - name: test npm dependencies
        run: |
          npm test
      - name: Upload Artifact coverage
        uses: actions/upload-artifact@v2
        with:
          name: coverage.zip
          path: coverage/
          retention-days: 1
      - name: Upload Artifact test result
        uses: actions/upload-artifact@v2
        with:
          name: test-result.zip
          path: test-result/
          retention-days: 1

      - name: eslint report
        run: |
          npm run lintreport
      - name: Upload Artifact lint report
        uses: actions/upload-artifact@v2
        with:
          name: eslintreport.html
          path: eslintreport.html
          retention-days: 1

      - name: Build Android Release apk
        run: |
          cd android && bash ./gradlew assembleRelease --stacktrace
      - name: Upload Artifact apk
        uses: actions/upload-artifact@v2
        with:
          name: app-release.apk
          path: android/app/build/outputs/apk/release/app-release.apk

  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.SONAR_GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

